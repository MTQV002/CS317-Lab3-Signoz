services:
  # Titanic API Service  
  titanic-api:
    build: .
    container_name: titanic-api
    ports:
      - "8000:8000"
    volumes:
      - ./logs:/app/logs
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://signoz-otel-collector:4317
      - OTEL_SERVICE_NAME=titanic-api
      - OTEL_SERVICE_VERSION=1.0.0
      - OTEL_RESOURCE_ATTRIBUTES=service.name=titanic-api,service.version=1.0.0
    depends_on:
      signoz-otel-collector:
        condition: service_healthy
    networks:
      - signoz
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # ClickHouse Database
  signoz-clickhouse:
    image: clickhouse/clickhouse-server:22.8-alpine
    container_name: signoz-clickhouse
    hostname: signoz-clickhouse
    ports:
      - "9000:9000"
      - "8123:8123"
    volumes:
      - signoz-clickhouse-data:/var/lib/clickhouse/
      - ./signoz/clickhouse-config/ipv4.xml:/etc/clickhouse-server/config.d/listen_ipv4.xml:ro
    environment:
      - CLICKHOUSE_DB=signoz_traces
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=
    networks:
      - signoz
    restart: unless-stopped
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:8123/ping"]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 90s

  # OpenTelemetry Collector
  signoz-otel-collector:
    image: signoz/signoz-otel-collector:0.88.8
    container_name: signoz-otel-collector
    hostname: signoz-otel-collector
    command: ["--config=/etc/otelcol-contrib/otel-collector-config.yaml"]
    volumes:
      - ./signoz/otel-collector-config/config.yaml:/etc/otelcol-contrib/otel-collector-config.yaml:ro
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Prometheus metrics
      - "13133:13133" # Health check
      - "14250:14250" # Jaeger gRPC  
      - "14268:14268" # Jaeger HTTP
      - "9411:9411"   # Zipkin
    environment:
      - OTEL_RESOURCE_ATTRIBUTES=service.name=signoz-otel-collector
    depends_on:
      signoz-clickhouse:
        condition: service_healthy
    networks:
      - signoz
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:13133/ || exit 0"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # SigNoz Query Service
  signoz-query-service:
    image: signoz/query-service:0.39.0
    container_name: signoz-query-service
    hostname: signoz-query-service
    ports:
      - "8080:8080"
    volumes:
      - signoz-query-data:/var/lib/signoz
    environment:
      - ClickHouseUrl=tcp://signoz-clickhouse:9000
      - STORAGE=clickhouse
      - GODEBUG=netdns=go
      - SIGNOZ_LOCAL_DB_PATH=/var/lib/signoz/signoz.db
      - TELEMETRY_ENABLED=true
      - DEPLOYMENT_TYPE=docker-standalone-amd
    depends_on:
      signoz-clickhouse:
        condition: service_healthy
      signoz-otel-collector:
        condition: service_healthy
    networks:
      - signoz
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s

  # SigNoz Frontend
  signoz-frontend:
    image: signoz/frontend:0.39.0
    container_name: signoz-frontend
    hostname: signoz-frontend
    ports:
      - "3301:3301"
    environment:
      - FRONTEND_API_ENDPOINT=http://signoz-query-service:8080
    depends_on:
      signoz-query-service:
        condition: service_healthy
    networks:
      - signoz
    restart: unless-stopped

networks:
  signoz:
    name: signoz_network
    driver: bridge

volumes:
  signoz-clickhouse-data:
    name: signoz_clickhouse_data
  signoz-query-data:
    name: signoz_query_data